directive @adminOnly on FIELD_DEFINITION

directive @extends on OBJECT | INTERFACE

directive @external on FIELD_DEFINITION | OBJECT

directive @goModel(model: String, models: [String!]) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION

directive @inaccessible on SCALAR | OBJECT | FIELD_DEFINITION | ARGUMENT_DEFINITION | INTERFACE | UNION | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION

directive @key(fields: _FieldSet!, resolvable: Boolean = true) on OBJECT | INTERFACE

directive @link(import: [String!], url: String!) on SCHEMA

directive @override(from: String!) on FIELD_DEFINITION

directive @provides(fields: _FieldSet!) on FIELD_DEFINITION

directive @requires(fields: _FieldSet!) on FIELD_DEFINITION

directive @shareable on OBJECT | FIELD_DEFINITION

"""
The @specifiedBy built-in directive is used within the type system definition
language to provide a scalar specification URL for specifying the behavior of
custom scalar types.
"""
directive @specifiedBy(url: String!) on SCALAR

directive @tag(name: String!) on FIELD_DEFINITION | INTERFACE | OBJECT | UNION | ARGUMENT_DEFINITION | SCALAR | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION

scalar _Any

union _Entity = Area | Tag | Topic | User

scalar _FieldSet

type _Service {
  sdl: String
}

input AddTagCategoryParam {
  """标签类别名称"""
  name: String!

  """标签类别作用域：personal-个人/topic-话题"""
  scope: String!

  """对应的scope的ID，如话题ID，scope为personal时，无需上送"""
  entityId: String

  """该类别标签是否只能自己打，仅scope=personal时生效，默认为false"""
  onlySelf: Boolean

  """默认样式ID"""
  defaultStyleId: Int

  """是否可用"""
  enable: Boolean!
}

input AddTagParam {
  """标签名"""
  name: String!

  """标签类别"""
  categoryId: Int!

  """情绪属性"""
  sentiment: String

  """样式ID"""
  styleId: Int

  """是否可用"""
  enable: Boolean!
}

input AddTagStyleParam {
  """样式名称"""
  name: String!

  """标签字体颜色"""
  fontColor: String

  """标签背景颜色"""
  backgroundColor: String

  """背景图片URL"""
  backgroundImage: String

  """是否可用"""
  enable: Boolean!
}

input AddTopicCategoryParam {
  """类别名"""
  name: String!

  """类别描述"""
  desc: String!

  """话题颜色"""
  defaultColor: String

  """是否限时"""
  timeLimited: Boolean!

  """是否可用"""
  enable: Boolean!
}

input AddTopicParam {
  """话题名"""
  name: String!

  """副标题"""
  subtitle: String

  """类别"""
  category: String!

  """话题颜色"""
  color: String

  """话题描述"""
  desc: String

  """开始时间"""
  startAt: Time

  """结束时间"""
  endAt: Time

  """可见地区"""
  visibleArea: [String!]

  """封面URL"""
  frontCover: String

  """排序"""
  sequence: Int

  """是否可用"""
  enable: Boolean!
}

type AdminAccount {
  id: String!
  nickname: String!
  email: String!
  avatar: String!
  enabled: Boolean!
  createdAt: Time!
  token: String!
}

type Area {
  """地区代码"""
  code: AreaCode!

  """上级地区代码"""
  parentCode: AreaCode!

  """名称"""
  name: String!

  """完整名称"""
  fullName: String!

  """层级"""
  depth: Int!

  """是否开通业务"""
  enabled: Boolean!

  """下级地区"""
  children: [Area!]

  """上级地区"""
  parent: Area
}

scalar AreaCode

input AreaFilter {
  """地区名称，支持模糊查询"""
  name: String

  """地区层级，0-省/1-市/2-县"""
  depth: Int

  """是否开通业务"""
  enabled: Boolean
}

scalar AreaIDList

type Blacklist {
  """黑名单ID列表"""
  blacklistIds: [String!]

  """黑名单用户列表"""
  blockUsers: [User!]
}

input BlockUserParam {
  """用户封禁时长(分钟)"""
  userBlockDuration: Int

  """匹配封禁时长(分钟)"""
  matchingBlockDuration: Int

  """聊天封禁时长(分钟)"""
  chatBlockDuration: Int
}

input CityFilter {
  name: String
}

input CreateTopicOptionConfig {
  timeWeight: Int!
  threshold: Int!
  properties: [TopicOptionPropertyParam!]
}

enum DictCategory {
  """职业"""
  Career

  """MBTI"""
  Mbti
}

type DictData {
  """编码"""
  code: String!

  """字典分类"""
  category: String!

  """字典分类描述"""
  categoryDesc: String

  """字典项"""
  item: String!

  """字典项描述"""
  itemDesc: String!

  """层级"""
  level: Int!

  """上级选项编码"""
  parentCode: String

  """上级选项"""
  parent: DictData

  """下级选项"""
  children: [DictData!]
}

type Entity {
  findAreaByCode(code: AreaCode!): Area!
  findTagByID(id: String!): Tag!
  findTopicByID(id: String!): Topic!
  findUserByID(id: String!): User!
}

type ErrorDesc {
  code: String!
  cn: String!
}

enum ExtraOptionKey {
  None
  Singer
  Concert
  POI
  City
}

input FeishuLoginParam {
  avatar: String!
  email: String!
  nickname: String!
}

input GraphQLPaginator {
  page: Int!
  size: Int!
}

scalar IDList

type imageUploadUrl {
  """上传地址，使用 put 方法直接发送二进制文件即可，url 有效时长 5min"""
  uploadUrl: String!

  """若上传成功后，即可通过该地址访问"""
  cdnUrl: String!

  """文件名，无后缀"""
  name: String!
}

type Inviter {
  """邀请人ID"""
  id: String!

  """邀请人昵称"""
  nickname: String!

  """邀请渠道"""
  channel: String

  """邀请时间"""
  invitedAt: Time!
}

type LoginResult {
  """登录token，后续请求放入Header中"""
  token: String!

  """是否新注册用户"""
  isNew: Boolean!

  """协议是否勾选"""
  agreementChecked: Boolean!
}

scalar Map

type Mutation {
  """
  【通用】图片上传COS链接生成，返回一个上传的 url，使用上传方式：axios.put("<url>", file), file 为二进制文件
  """
  genImageUploadUrl(
    """userId 非必填，除了管理端操作时需要设置该值"""
    userId: String
  ): imageUploadUrl!

  """获取小程序邀请二维码"""
  getInvitationMiniAppCode(
    """用户ID"""
    userId: String!
  ): String
  addAdminAccount(email: String!): AdminAccount!
  feishuLogin(param: FeishuLoginParam!): AdminAccount!
  updateAdminAccount(id: String!, param: UpdateAdminAccountParam!): AdminAccount!
  renewAdminToken: String!

  """【地区】上线"""
  enableArea(
    """地区代码"""
    code: AreaCode!

    """下级地区代码，为空时全部下级地区开通"""
    childCodes: AreaIDList
  ): String

  """【地区】下线"""
  disableArea(
    """地区代码，所有的下级地区全部下线"""
    code: AreaCode!
  ): String

  """【地区】逆地址解析"""
  geocoderReverse(
    """纬度"""
    latitude: String!

    """经度"""
    longitude: String!
  ): Area!

  """关注"""
  follow(
    """被关注人的ID"""
    userId: String!

    """匹配结ID"""
    matchingId: String!
  ): String

  """取消关注"""
  cancelFollow(
    """被关注人的ID"""
    userId: String!
  ): String

  """【标签】新增用户标签"""
  addUserTag(
    """标签ID"""
    tagId: String!

    """被打标签的人，为空时表示给自己打标签"""
    userId: String
  ): String

  """【标签】移除用户标签"""
  removeUserTag(
    """标签ID"""
    tagId: String!

    """被打标签的人，为空时表示移除自己的标签"""
    userId: String
  ): String

  """【标签】用户更新个人标签"""
  updatePersonalTag(
    """个人所有标签ID列表"""
    tagIds: [String!]!
  ): String @deprecated(reason: "暂不使用，无法保证代码正确")

  """【标签】新增标签"""
  addTag(param: AddTagParam!): String

  """【标签】设置标签可用状态"""
  tagSetSentiment(
    """标签ID"""
    tagId: String!

    """情绪属性"""
    sentiment: String
  ): String

  """【标签】设置标签样式"""
  tagSetStyle(
    """标签ID"""
    tagId: String!

    """样式ID"""
    styleId: Int
  ): String

  """【标签】将标签样式设为可用"""
  enableTag(
    """标签ID"""
    id: String!
  ): String

  """【标签】将标签样式设为不可用"""
  disableTag(
    """标签ID"""
    id: String!
  ): String

  """【标签】新增标签样式"""
  addTagStyle(param: AddTagStyleParam!): String

  """【标签】修改标签样式字体颜色"""
  tagStyleSetFontColor(
    """标签样式ID"""
    id: Int!

    """标签字体颜色"""
    fontColor: String!
  ): String

  """【标签】修改标签样式背景颜色"""
  tagStyleSetBackgroundColor(
    """标签样式ID"""
    id: Int!

    """标签背景颜色"""
    backgroundColor: String!
  ): String

  """【标签】修改标签样式背景图片"""
  tagStyleSetBackgroundImage(
    """标签样式ID"""
    id: Int!

    """标签背景图片URL"""
    backgroundImage: String!
  ): String

  """【标签】将标签样式设为可用"""
  enableTagStyle(
    """标签样式ID"""
    id: Int!
  ): String

  """【标签】将标签样式设为不可用"""
  disableTagStyle(
    """标签样式ID"""
    id: Int!
  ): String

  """【标签】新增标签类别"""
  addTagCategory(param: AddTagCategoryParam!): String

  """【标签】标签类别设置是否标签自己打"""
  tagCategorySetOnlySelf(
    """标签类别ID"""
    id: Int!

    """该类别标签是否只能自己打"""
    onlySelf: Boolean!
  ): String

  """【标签】标签类别设置默认样式"""
  tagCategorySetDefaultStyle(
    """标签类别ID"""
    id: Int!

    """默认样式ID"""
    defaultStyleId: Int
  ): String

  """【标签】将标签样式设为可用"""
  enableTagCategory(
    """标签类别ID"""
    id: Int!
  ): String

  """【标签】将标签样式设为不可用"""
  disableTagCategory(
    """标签类别ID"""
    id: Int!
  ): String

  """【话题】添加话题类别，管理端使用"""
  addTopicCategory(param: AddTopicCategoryParam!): String

  """【话题】添加话题，管理端使用"""
  addTopic(param: AddTopicParam!): String

  """【话题】用户自定义话题"""
  userCustomTopic(param: UserCustomTopicParam!): String

  """【话题】话题类别更新，管理端使用"""
  updateTopicCategory(
    """类别ID"""
    id: Int!

    """修改参数"""
    param: UpdateTopicCategoryParam!
  ): String

  """【话题】话题更新，管理端使用"""
  updateTopic(
    """话题ID"""
    id: String!

    """修改参数"""
    param: UpdateTopicParam!
  ): String

  """【话题】将话题设为可用"""
  enableTopic(
    """话题ID"""
    id: String!
  ): String

  """【话题】将话题设为不可用"""
  disableTopic(
    """话题ID"""
    id: String!
  ): String
  createTopicOptionConfig(topicId: String!, param: CreateTopicOptionConfig!): TopicOptionConfig!
  updateTopicOptionConfig(topicId: String!, param: UpdateTopicOptionConfig!): TopicOptionConfig!
  deleteTopicOptionConfig(topicId: String!): String!

  """【用户】小程序登录"""
  miniAppLogin(
    """小程序登录code"""
    code: String!

    """城市编码"""
    cityId: String

    """邀请人，非必填"""
    inviterId: String

    """邀请渠道：miniapp——小程序转发；QR——二维码"""
    channel: String
  ): LoginResult!

  """【用户】勾选协议"""
  checkAgreement: String

  """【用户】用户初始化——可看做小程序注册接口"""
  userInit(
    """待修改参数"""
    param: UserInitParam!

    """邀请人，非必填"""
    inviterId: String
  ): String

  """【用户】更新手机号"""
  updatePhone(
    """用户ID，管理端请求时必填"""
    userId: String

    """手机号"""
    phone: String!
  ): String

  """【用户】更新用户信息"""
  updateUserInfo(
    """用户ID，管理端使用必填"""
    userId: String

    """待修改参数"""
    param: UserInfoUpdateParam!
  ): String

  """【用户】更新用户资料"""
  updateUserProfile(
    """用户ID，管理端使用必填"""
    userId: String

    """待修改参数"""
    param: UserProfileUpdateParam!
  ): String

  """【用户】修改用户信息"""
  userSetProfile(
    """用户ID，管理端请求时必填"""
    userId: String

    """手机号"""
    phone: String

    """性别，M-男性/F-女性"""
    gender: String

    """生日，格式yyyyMMdd"""
    birthday: String

    """备注"""
    remark: String
  ): String @deprecated(reason: "use updateUserInfo instead")

  """【用户】修改用户昵称"""
  userSetNickname(
    """用户ID，管理端请求时必填"""
    userId: String

    """昵称，最长20个字符"""
    nickname: String!
  ): String @deprecated(reason: "use updateUserInfo instead")

  """【用户】修改用户头像"""
  userSetAvatar(
    """用户ID，管理端请求时必填"""
    userId: String

    """头像url"""
    avatarUrl: String!
  ): String @deprecated(reason: "use updateUserInfo instead")

  """【用户】修改用户封面背景"""
  userSetBackground(
    """用户ID，管理端请求时必填"""
    userId: String

    """封面背景url"""
    backgroundUrl: String!
  ): String @deprecated(reason: "use updateUserInfo instead")

  """【用户】昵称修改审核，管理端使用"""
  userNicknameAudit(
    """审核记录ID"""
    id: Int!

    """审核结果"""
    passed: Boolean!
  ): String

  """【用户】头像和封面背景图片审核，管理端使用"""
  userImageAudit(
    """审核记录ID"""
    id: Int!

    """审核结果"""
    passed: Boolean!
  ): String

  """【用户】点赞"""
  userLike(
    """用户ID"""
    userId: String!
  ): String

  """【用户】取消点赞"""
  userLikeCancel(
    """用户ID"""
    userId: String!
  ): String

  """【用户】踩"""
  userDislike(
    """用户ID"""
    userId: String!
  ): String

  """【用户】取消踩"""
  userDislikeCancel(
    """用户ID"""
    userId: String!
  ): String

  """【黑名单】添加黑名单"""
  userAddBlacklist(
    """被加入黑名单的人"""
    blockId: String!

    """操作人，管理端使用"""
    userId: String
  ): String

  """【黑名单】移出黑名单"""
  userRemoveBlacklist(
    """被移出黑名单的人"""
    blockId: String!

    """操作人，管理端使用"""
    userId: String
  ): String

  """【举报】用户举报"""
  userReport(
    """匹配ID"""
    matchingId: String!

    """被举报人用户ID"""
    userId: String!

    """举报原因"""
    reason: [String!]!
  ): String

  """【举报】处理举报，管理端使用"""
  handleReport(
    """举报记录ID"""
    id: Int!

    """举报处理结果"""
    result: String!

    """惩罚方式"""
    punishment: String!

    """封禁时长，当punishment=CustomBlock时生效"""
    blockDuration: Int
  ): String

  """【封禁】用户封禁，管理端使用"""
  blockUser(
    """用户ID"""
    userId: String!

    """请求参数"""
    param: BlockUserParam!
  ): String

  """【封禁】用户解封，管理端使用"""
  unblockUser(
    """用户ID"""
    userId: String!

    """
    解封范围，为空时表示全部解封，选项包括：
    用户封禁：userBlock
    匹配封禁：matchingBlock
    聊天封禁：chatBlock
    """
    unblockScopes: [String!]
  ): String
}

type Query {
  """【通用】健康检查"""
  healthCheck: String!

  """【字典】按类别查询"""
  dictItemsByCategory(
    """类别"""
    category: DictCategory!

    """层级，默认1，用于树状结构查询指定层级数据"""
    level: Int
  ): [DictData!]

  """【字典】下级字典项查询"""
  dictChildItems(code: String!): [DictData!]

  """【字典】字典项详情查询"""
  dictItem(code: String!): DictData!
  listAdminAccount: [AdminAccount!]!
  isAdminLogined: Boolean
  adminAccount(id: String!): AdminAccount!

  """【地区】根据地区代码查询地区信息"""
  area(
    """地区代码"""
    code: AreaCode!
  ): Area!

  """【地区】地区列表查询"""
  areas(filter: AreaFilter): [Area!]!

  """【地区】查询城市列表"""
  cities(filter: CityFilter): [Area!]!

  """【地区】根据城市 ids 查询城市列表（depth = 1），地区可能不存在"""
  citiesByIds(ids: [AreaCode!]!): [Area]!

  """【地区】根据地区 ids 查询地区列表，地区可能不存在"""
  areasByIds(ids: [AreaCode!]!): [Area]!

  """【地区】上线地区列表"""
  enabledAreas: [Area!]!

  """【地区】获取地区的下级地区列表"""
  childAreas(code: AreaCode!): [Area!]!

  """用户对他人的关注情况"""
  userFollowState(
    """被关注人的Id"""
    userId: String!

    """关注人的Id，管理端必填"""
    followerId: String
  ): UserFollow!

  """他关注的人数"""
  followingNum(
    """用户ID，客户端使用无需上传"""
    userId: String
  ): Summary!

  """关注他的人数"""
  followerNum(
    """用户ID，管理端使用时必填"""
    userId: String
  ): Summary!

  """关注列表"""
  followings(
    """用户ID，管理端使用时必填"""
    userId: String

    """分页器"""
    paginator: GraphQLPaginator
  ): [User!]

  """被关注列表"""
  followers(
    """用户ID，管理端使用时必填"""
    userId: String

    """分页器"""
    paginator: GraphQLPaginator
  ): [User!]

  """【标签】标签详情"""
  tag(
    """标签ID"""
    id: String!
  ): Tag!

  """【标签】标签列表查询，管理端使用"""
  tags(
    """筛选器"""
    filter: TagFilter

    """分页器"""
    paginator: GraphQLPaginator
  ): [Tag!]

  """【标签】标签类别详情"""
  tagCategory(
    """标签类别ID"""
    id: Int!
  ): TagCategory!

  """【标签】标签类别列表查询，管理端使用"""
  tagCategories(
    """筛选器"""
    filter: TagCategoryFilter

    """分页器"""
    paginator: GraphQLPaginator
  ): [TagCategory!]

  """【标签】标签样式详情"""
  tagStyle(
    """标签样式ID"""
    id: Int!
  ): TagStyle!

  """【标签】标签样式列表查询，管理端使用"""
  tagStyles(
    """标签样式名称，支持模糊搜索"""
    name: String

    """分页器"""
    paginator: GraphQLPaginator
  ): [TagStyle!]

  """【标签】个人标签类别查询"""
  personalTagCategories: [TagCategory!]

  """【标签】个人自我评价标签按分类查询"""
  personalTags(
    """标签分类ID"""
    categoryId: Int!
  ): [Tag!]

  """【标签】我的标签-自己对自己打的标签"""
  myTags: [Tag!]

  """【话题】评价时备选话题类别"""
  evaluateTagCategories(
    """话题ID"""
    topicId: String
  ): [TagCategory!]

  """【标签】评价他们标签-按类别查询"""
  evaluateTags(
    """标签分类ID"""
    categoryId: Int!
  ): [Tag!]

  """【标签】用户标签-自己对他人打的标签"""
  userTags(
    """用户ID"""
    userId: String!
  ): [Tag!]

  """【标签】个人主页标签"""
  homePageTags(
    """用户ID"""
    userId: String!
  ): [Tag!]

  """【话题】类别查询"""
  topicCategory(
    """类别名称"""
    name: String!
  ): TopicCategory!

  """【话题】类别列表查询"""
  topicCategories(
    """是否可用，管理端可用，其他情况默认为TRUE"""
    enable: Boolean
  ): [TopicCategory!]!

  """【话题】类别列表查询"""
  topicCategoriesCount(
    """是否可用，管理端可用，其他情况默认为TRUE"""
    enable: Boolean
  ): Summary!

  """【话题】根据类别查询话题"""
  topicsByCategory(
    """类别ID"""
    category: String!

    """城市"""
    cityId: String

    """是否可用，管理端可用，其他情况默认为TRUE"""
    enable: Boolean

    """分页"""
    paginator: GraphQLPaginator
  ): [Topic!]!

  """【话题】话题查询"""
  topic(
    """话题ID"""
    id: String!
  ): Topic!

  """【话题】列表查询"""
  topics(
    """查询条件"""
    filter: TopicFilter

    """分页"""
    paginator: GraphQLPaginator
  ): [Topic!]!

  """【话题】列表查询数量，管理端功能"""
  topicsCount(filter: TopicFilter): Summary!
  topicOptionConfig(topicId: String!): TopicOptionConfig
  topicOptionConfigs(filter: TopicOptionConfigFilter, paginator: GraphQLPaginator): [TopicOptionConfig!]!
  topicOptionConfigsCount(filter: TopicOptionConfigFilter): Summary!
  singer(id: Int!): Singer!
  singers(filter: SingerFilter, paginator: GraphQLPaginator): [Singer!]!
  singersCount(filter: SingerFilter): Summary!

  """【用户】周活跃"""
  weeklyActive(
    """城市ID"""
    cityId: String
  ): Summary!

  """【用户】获取用户信息"""
  user(
    """用户ID"""
    id: String!
  ): User!

  """【用户】根据ID批量获取"""
  getUserByIds(
    """用户ID列表"""
    ids: [String!]!
  ): [User!]!

  """【用户】根据ID批量获取用户，管理端使用，用户可以不存在"""
  getUserByIdsV2(ids: [String!]!): [User]!

  """【用户】 我的信息"""
  myProfile: User!

  """【用户】 用户信息完整性检查"""
  userInfoCompletenessCheck(
    """用户ID，管理端使用"""
    userId: String
  ): UserInfoCompleteness!

  """【用户】用户搜索，管理端功能"""
  users(filter: UserFilter, paginator: GraphQLPaginator): [User!]!

  """【用户】用户搜索结果数量，管理端功能"""
  usersCount(filter: UserFilter): Summary!
  userStatistics(
    """统计日期"""
    date: String!
  ): UserStatsInfo!

  """【用户】待审核昵称列表查询"""
  nicknameReviews(paginator: GraphQLPaginator): [UserNicknameReview!]!

  """【用户】待审核图片列表查询"""
  imageReviews(paginator: GraphQLPaginator): [UserImageReview!]!

  """【点赞】查看对其他用户的点赞情况"""
  userLikeState(
    """用户ID"""
    userId: String!

    """点赞人ID，管理端必填"""
    operatorId: String
  ): UserLike

  """【黑名单】获取黑名单列表"""
  userBlacklist(
    """用户ID，管理端使用"""
    userId: String
  ): Blacklist!

  """【黑名单】判断是否在黑名单中"""
  isInBlacklist(
    """被移出黑名单的人"""
    blockId: String!

    """操作人，管理端使用"""
    userId: String
  ): Boolean!

  """【举报】是否已举报"""
  userReportState(
    """匹配ID"""
    matchingId: String!

    """被举报人用户ID"""
    userId: String!

    """举报人用户ID，管理端使用"""
    reporterId: String
  ): Boolean!

  """【举报】举报记录查询"""
  userReport(reportId: Int!): UserReport!

  """【举报】举报记录查询，管理端使用"""
  userReports(
    """过滤条件"""
    filter: UserReportFilter

    """分页组件"""
    paginator: GraphQLPaginator
  ): [UserReport!]!

  """【举报】举报记录总数量，管理端使用"""
  userReportsCount(
    """过滤条件"""
    filter: UserReportFilter
  ): Summary!

  """【封禁】封禁记录查询，只查询180天内的封禁记录，管理端使用"""
  userBlockRecords(
    """用户ID"""
    userId: String!

    """分页组件"""
    paginator: GraphQLPaginator
  ): [UserBlockRecord!]!

  """【封禁】封禁记录总数查询，只查询180天内的封禁记录，管理端使用"""
  userBlockRecordsCount(
    """用户ID"""
    userId: String!
  ): Summary!
  _entities(representations: [_Any!]!): [_Entity]!
  _service: _Service!
}

type Singer {
  id: Int!
  name: String!
  image: String!
  createdAt: Time!
}

input SingerFilter {
  name: String
}

type Summary {
  count: Int!
}

type Tag {
  """标签ID"""
  id: String!

  """标签名"""
  name: String!

  """标签类别"""
  category: TagCategory!

  """情绪"""
  sentiment: String

  """标签样式"""
  style: TagStyle

  """是否可用"""
  enable: Boolean!
}

type TagCategory {
  """标签类别ID"""
  id: Int!

  """类别名称"""
  name: String!

  """作用域：personal-个人标签/topic-话题标签"""
  scope: String!

  """对应的实体ID，当scope不是personal时必填，如话题ID"""
  entityId: String

  """类别的标签默认样式"""
  defaultStyle: TagStyle

  """是否可用"""
  enable: Boolean!
}

input TagCategoryFilter {
  """标签类别名称，支持模糊搜索"""
  name: String

  """类别范围"""
  scope: String

  """话题ID"""
  entityId: String

  """是否可用，仅管理端可用"""
  enable: Boolean
}

input TagFilter {
  """标签名称，支持模糊搜索"""
  name: String

  """类别ID"""
  categoryId: Int

  """情绪类别"""
  sentiment: String

  """是否可用，仅管理端可用"""
  enable: Boolean
}

type TagStyle {
  """样式ID"""
  id: Int!

  """样式名"""
  name: String!

  """字体颜色"""
  fontColor: String!

  """背景颜色"""
  backgroundColor: String!

  """背景图片"""
  backgroundImage: String!

  """可用状态"""
  enable: Boolean!
}

scalar Time

type Topic {
  """话题ID"""
  id: String!

  """名称"""
  name: String!

  """副标题"""
  subtitle: String

  """类别"""
  category: String!

  """封面图片URL"""
  frontCover: String

  """可见地区，列表为空表示全区域可见"""
  visibleArea: [String!]

  """话题颜色"""
  color: String

  """话题描述"""
  desc: String

  """开始时间"""
  startAt: Time

  """结束时间"""
  endAt: Time

  """排序"""
  sequence: Int

  """是否可用"""
  enable: Boolean!

  """创建人"""
  createdBy: User!

  """是否有进阶的匹配配置"""
  hasConfig: Boolean!

  """图片配置"""
  imageConfigs: [TopicImageConfig!]
}

type TopicCategory {
  """类别ID"""
  id: Int!

  """分类名称"""
  name: String!

  """类别描述"""
  desc: String!

  """话题颜色"""
  defaultColor: String

  """是否可用"""
  enable: Boolean!
}

input TopicFilter {
  """话题名，支持模糊查询，如果是以 t_ 开头，则搜索话题 id"""
  name: String

  """是否可用，管理端可用，其他情况默认为TRUE"""
  enable: Boolean
}

type TopicImageConfig {
  """ID"""
  id: Int!

  """话题ID"""
  topicId: String!

  """图片类型，如：icon/background"""
  imageType: String!

  """图片URL"""
  imageUrl: String!

  """是否失效"""
  Enable: Boolean!
}

type TopicOption {
  name: String!
  value: Int!
}

type TopicOptionConfig {
  topicId: String!
  timeWeight: Int!
  threshold: Int!
  properties: [TopicOptionProperty!]!
}

input TopicOptionConfigFilter {
  topicId: String
}

input TopicOptionParam {
  name: String!
  value: Int!
}

type TopicOptionProperty {
  id: String!
  name: String!
  weight: Int!
  comparable: Boolean!
  enabled: Boolean!
  maxSelection: Int!
  defaultSelectAll: Boolean!
  options: [TopicOption!]!
  extraOptionKey: ExtraOptionKey!
  required: Boolean!
}

input TopicOptionPropertyParam {
  id: String!
  name: String!
  weight: Int!
  comparable: Boolean!
  defaultSelectAll: Boolean!
  maxSelection: Int!
  options: [TopicOptionParam!]!
  extraOptionKey: ExtraOptionKey!
  required: Boolean!
}

input UpdateAdminAccountParam {
  enabled: Boolean
}

input UpdateTopicCategoryParam {
  """类别描述"""
  desc: String

  """话题默认颜色"""
  defaultColor: String

  """是否可用"""
  enable: Boolean
}

input UpdateTopicOptionConfig {
  timeWeight: Int
  threshold: Int
  properties: [TopicOptionPropertyParam!]
}

input UpdateTopicParam {
  """话题名"""
  name: String

  """副标题"""
  subtitle: String

  """话题颜色"""
  color: String

  """话题描述"""
  desc: String

  """开始时间"""
  startAt: Time

  """结束时间"""
  endAt: Time

  """可见地区"""
  visibleArea: [String!]

  """封面URL"""
  frontCover: String

  """排序"""
  sequence: Int

  """是否可用"""
  enable: Boolean
}

type User {
  """用户ID"""
  id: String!

  """昵称"""
  nickname: String

  """手机号"""
  phone: String

  """头像URL"""
  avatar: String

  """封面背景URL"""
  background: String

  """性别：男——M；女——F"""
  gender: String

  """生日"""
  birthday: String

  """微信openID"""
  openId: String!

  """注册时间"""
  createdAt: Time!

  """上次登录时间"""
  lastLoginTime: Time

  """remark"""
  remark: String

  """年龄"""
  age: Int

  """邀请人信息"""
  inviter: Inviter

  """点赞人数"""
  likeNum: Int!

  """踩人数"""
  dislikeNum: Int!

  """关注他的人数"""
  followerNum: Int!

  """他关注的人数"""
  followingNum: Int!

  """是否封禁"""
  blocked: Boolean! @deprecated(reason: "not enough, use field blockInfo instead")

  """用户封禁信息"""
  blockInfo: UserBlockInfo!

  """用户标签"""
  tags: [Tag!]

  """用户资料"""
  profile: UserProfile!

  """当前所在地区"""
  currLoc: String
}

type UserBlockInfo {
  """是否用户封禁，封禁则整个APP无法使用"""
  userBlocked: Boolean!

  """用户封禁截止时间，userBlocked=true时存在值"""
  userBlockUntil: Time

  """是否匹配封禁，封禁则无法加入新的匹配"""
  matchingBlocked: Boolean!

  """匹配封禁截止时间，matchingBlocked=true时存在值"""
  matchingBlockUntil: Time

  """是否聊天封禁，封禁则无法发送消息"""
  chatBlocked: Boolean!

  """聊天封禁截止时间，chatBlocked=true时存在值"""
  chatBlockUntil: Time
}

type UserBlockRecord {
  """ID"""
  id: Int!

  """用户ID"""
  userId: String!

  """操作类型：封禁/解封"""
  operation: String!

  """操作范围"""
  blockScope: String!

  """原因"""
  reason: String!

  """封禁截止时间，仅对封禁操作有效"""
  blockUntil: Time

  """关联的ID，如举报ID"""
  relatedInfo: String

  """操作人"""
  operateBy: String!

  """创建时间"""
  createdAt: Time!
}

input UserCustomTopicParam {
  """话题名"""
  name: String!

  """话题描述"""
  desc: String

  """话题颜色"""
  color: String

  """开始时间"""
  startAt: Time!

  """结束时间"""
  endAt: Time!

  """话题显示城市"""
  cityId: String
}

input UserFilter {
  """昵称/id，支持模糊查询（当以 u_ 开头的时候，搜 id）"""
  keyword: String

  """性别"""
  gender: String

  """注册时间（最早）"""
  createAfter: Time

  """注册时间（最晚）"""
  createBefore: Time
}

type UserFollow {
  """被关注人的Id"""
  userId: String!

  """关注人的Id"""
  followerId: String!

  """是否关注"""
  enable: Boolean!
}

type UserImageReview {
  """待审核记录ID"""
  id: Int!

  """用户ID"""
  userId: String!

  """图片类型"""
  field: String!

  """URL"""
  url: String!
}

type UserInfoCompleteness {
  """信息是否全部填写"""
  filled: Boolean!

  """
  未填写的字段列表，filled=false时有值
  - nickname: 昵称
  - avatar: 头像
  - gender: 性别
  - birthday: 生日
  """
  unfilledFields: [String!]
}

input UserInfoUpdateParam {
  """昵称"""
  nickname: String

  """性别，M-男性/F-女性"""
  gender: String

  """生日，格式yyyyMMdd"""
  birthday: String

  """头像url"""
  avatarUrl: String

  """封面背景url"""
  backgroundUrl: String

  """备注"""
  remark: String
}

input UserInitParam {
  """昵称"""
  nickname: String!

  """性别，M-男性/F-女性"""
  gender: String!

  """生日，格式yyyyMMdd"""
  birthday: String!

  """头像url"""
  avatarUrl: String!
}

type UserLike {
  """是否点赞"""
  like: Boolean!

  """是否踩"""
  dislike: Boolean!
}

type UserNicknameReview {
  """待审核记录ID"""
  id: Int!

  """用户ID"""
  userId: String!

  """昵称"""
  nickname: String!
}

type UserProfile {
  """职业"""
  career: String

  """职业对象信息"""
  careerInfo: DictData

  """家乡城市"""
  city: String

  """家乡城市对象信息"""
  cityInfo: Area

  """学校"""
  school: String

  """MBTI"""
  mbti: String

  """微信号"""
  wechatNo: String

  """星座"""
  constellation: String
}

input UserProfileUpdateParam {
  """职业"""
  careerId: String

  """家乡城市"""
  cityId: String

  """学校"""
  school: String

  """MBTI"""
  mbti: String

  """微信号"""
  wechatNo: String
}

type UserReport {
  """举报记录ID"""
  id: Int!

  """举报关联的匹配ID"""
  matchingId: String!

  """被举报人ID"""
  userId: String!

  """举报人ID"""
  reporterId: String!

  """举报原因"""
  reason: [String!]!

  """是否已处理"""
  processed: Boolean!

  """处理结果"""
  result: String

  """备注"""
  remark: String
}

input UserReportFilter {
  """被举报人ID"""
  userId: String

  """举报人ID"""
  reporterId: String

  """匹配ID"""
  matchingId: String

  """是否已处理"""
  processed: Boolean!
}

type UserStatsInfo {
  """总用户数"""
  totalNum: Int!

  """总有效用户数"""
  totalValidNum: Int!

  """新增用户数"""
  growthNum: Int!

  """新增有效用户数"""
  growthValidNum: Int!

  """新增邀请用户数"""
  growthInvitedNum: Int!

  """活跃用户数"""
  activeNum: Int!
}

