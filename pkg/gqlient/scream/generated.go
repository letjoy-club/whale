// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package scream

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

type InvitationCreatedParam struct {
	InvitationId string   `json:"invitationId"`
	InviterId    string   `json:"inviterId"`
	InviteeId    string   `json:"inviteeId"`
	TopicId      string   `json:"topicId"`
	AreaIds      []string `json:"areaIds"`
}

// GetInvitationId returns InvitationCreatedParam.InvitationId, and is useful for accessing the field via an interface.
func (v *InvitationCreatedParam) GetInvitationId() string { return v.InvitationId }

// GetInviterId returns InvitationCreatedParam.InviterId, and is useful for accessing the field via an interface.
func (v *InvitationCreatedParam) GetInviterId() string { return v.InviterId }

// GetInviteeId returns InvitationCreatedParam.InviteeId, and is useful for accessing the field via an interface.
func (v *InvitationCreatedParam) GetInviteeId() string { return v.InviteeId }

// GetTopicId returns InvitationCreatedParam.TopicId, and is useful for accessing the field via an interface.
func (v *InvitationCreatedParam) GetTopicId() string { return v.TopicId }

// GetAreaIds returns InvitationCreatedParam.AreaIds, and is useful for accessing the field via an interface.
func (v *InvitationCreatedParam) GetAreaIds() []string { return v.AreaIds }

// InvitationCreatedResponse is returned by InvitationCreated on success.
type InvitationCreatedResponse struct {
	InvitationCreated string `json:"invitationCreated"`
}

// GetInvitationCreated returns InvitationCreatedResponse.InvitationCreated, and is useful for accessing the field via an interface.
func (v *InvitationCreatedResponse) GetInvitationCreated() string { return v.InvitationCreated }

type MatchingGroupCreatedParam struct {
	MatchingId string   `json:"matchingId"`
	UserId     string   `json:"userId"`
	PartnerId  string   `json:"partnerId"`
	TopicId    string   `json:"topicId"`
	AreaIds    []string `json:"areaIds"`
}

// GetMatchingId returns MatchingGroupCreatedParam.MatchingId, and is useful for accessing the field via an interface.
func (v *MatchingGroupCreatedParam) GetMatchingId() string { return v.MatchingId }

// GetUserId returns MatchingGroupCreatedParam.UserId, and is useful for accessing the field via an interface.
func (v *MatchingGroupCreatedParam) GetUserId() string { return v.UserId }

// GetPartnerId returns MatchingGroupCreatedParam.PartnerId, and is useful for accessing the field via an interface.
func (v *MatchingGroupCreatedParam) GetPartnerId() string { return v.PartnerId }

// GetTopicId returns MatchingGroupCreatedParam.TopicId, and is useful for accessing the field via an interface.
func (v *MatchingGroupCreatedParam) GetTopicId() string { return v.TopicId }

// GetAreaIds returns MatchingGroupCreatedParam.AreaIds, and is useful for accessing the field via an interface.
func (v *MatchingGroupCreatedParam) GetAreaIds() []string { return v.AreaIds }

// MatchingGroupCreatedResponse is returned by MatchingGroupCreated on success.
type MatchingGroupCreatedResponse struct {
	MatchingGroupCreated string `json:"matchingGroupCreated"`
}

// GetMatchingGroupCreated returns MatchingGroupCreatedResponse.MatchingGroupCreated, and is useful for accessing the field via an interface.
func (v *MatchingGroupCreatedResponse) GetMatchingGroupCreated() string {
	return v.MatchingGroupCreated
}

// SendUserNotificationResponse is returned by SendUserNotification on success.
type SendUserNotificationResponse struct {
	// 【通知】内部调用
	// - 匹配成功 param: { "userId": "", "userName": "", "matchingId": "" }
	// - 匹配被拒绝 param: { "userId": "", "userName": "", "matchingId": "" }
	// - 匹配超时 param: { "matchingId": "" }
	// - 收到邀请 param: { "userId": "", "userName": "", "invitationId": "", "topicName": "" }
	// - 邀请被接受 param: { "userId": "", "userName": "", "invitationId": "", "topicName": "" }
	// - 邀请撤回 param: { "userId": "", "userName": "", "invitationId": "", "topicName": "" }
	// - 邀请被拒 param: { "userId": "", "userName": "", "invitationId": "", "topicName": "" }
	// - 官方消息 param: { "title": "", "message": "" }
	// - 举报已提交 param: { "userId":"", "userName": "" }
	// - 举报生效 param: { "userId": "", "userName": "" }
	SendUserNotification string `json:"sendUserNotification"`
}

// GetSendUserNotification returns SendUserNotificationResponse.SendUserNotification, and is useful for accessing the field via an interface.
func (v *SendUserNotificationResponse) GetSendUserNotification() string {
	return v.SendUserNotification
}

type UserNotificationKind string

const (
	// 【匹配】匹配到用户
	UserNotificationKindMatched UserNotificationKind = "Matched"
	// 【匹配】被拒绝
	UserNotificationKindMatchingdenied UserNotificationKind = "MatchingDenied"
	// 【匹配】超时
	UserNotificationKindMatchingtimeout UserNotificationKind = "MatchingTimeout"
	// 【邀请】收到邀请
	UserNotificationKindInvitationrecieved UserNotificationKind = "InvitationRecieved"
	// 【邀请】邀请被拒
	UserNotificationKindInvitationdenied UserNotificationKind = "InvitationDenied"
	// 【邀请】邀请被接受
	UserNotificationKindInvitationaccepted UserNotificationKind = "InvitationAccepted"
	// 【邀请】邀请撤回
	UserNotificationKindInvitationcanceled UserNotificationKind = "InvitationCanceled"
	// 【官方】欢迎消息
	UserNotificationKindWelcomemessage UserNotificationKind = "WelcomeMessage"
	// 【官方】举报生效
	UserNotificationKindReportaccepted UserNotificationKind = "ReportAccepted"
	// 【官方】收到举报
	UserNotificationKindReportrecieved UserNotificationKind = "ReportRecieved"
	// 【官方】自定义消息
	UserNotificationKindCustomizedmessage UserNotificationKind = "CustomizedMessage"
)

// __InvitationCreatedInput is used internally by genqlient
type __InvitationCreatedInput struct {
	Param InvitationCreatedParam `json:"param"`
}

// GetParam returns __InvitationCreatedInput.Param, and is useful for accessing the field via an interface.
func (v *__InvitationCreatedInput) GetParam() InvitationCreatedParam { return v.Param }

// __MatchingGroupCreatedInput is used internally by genqlient
type __MatchingGroupCreatedInput struct {
	Param MatchingGroupCreatedParam `json:"param"`
}

// GetParam returns __MatchingGroupCreatedInput.Param, and is useful for accessing the field via an interface.
func (v *__MatchingGroupCreatedInput) GetParam() MatchingGroupCreatedParam { return v.Param }

// __SendUserNotificationInput is used internally by genqlient
type __SendUserNotificationInput struct {
	Kind       UserNotificationKind   `json:"kind"`
	RecipentId string                 `json:"recipentId"`
	Param      map[string]interface{} `json:"param"`
}

// GetKind returns __SendUserNotificationInput.Kind, and is useful for accessing the field via an interface.
func (v *__SendUserNotificationInput) GetKind() UserNotificationKind { return v.Kind }

// GetRecipentId returns __SendUserNotificationInput.RecipentId, and is useful for accessing the field via an interface.
func (v *__SendUserNotificationInput) GetRecipentId() string { return v.RecipentId }

// GetParam returns __SendUserNotificationInput.Param, and is useful for accessing the field via an interface.
func (v *__SendUserNotificationInput) GetParam() map[string]interface{} { return v.Param }

// The query or mutation executed by InvitationCreated.
const InvitationCreated_Operation = `
mutation InvitationCreated ($param: InvitationCreatedParam!) {
	invitationCreated(param: $param)
}
`

func InvitationCreated(
	ctx context.Context,
	client graphql.Client,
	param InvitationCreatedParam,
) (*InvitationCreatedResponse, error) {
	req := &graphql.Request{
		OpName: "InvitationCreated",
		Query:  InvitationCreated_Operation,
		Variables: &__InvitationCreatedInput{
			Param: param,
		},
	}
	var err error

	var data InvitationCreatedResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by MatchingGroupCreated.
const MatchingGroupCreated_Operation = `
mutation MatchingGroupCreated ($param: MatchingGroupCreatedParam!) {
	matchingGroupCreated(param: $param)
}
`

func MatchingGroupCreated(
	ctx context.Context,
	client graphql.Client,
	param MatchingGroupCreatedParam,
) (*MatchingGroupCreatedResponse, error) {
	req := &graphql.Request{
		OpName: "MatchingGroupCreated",
		Query:  MatchingGroupCreated_Operation,
		Variables: &__MatchingGroupCreatedInput{
			Param: param,
		},
	}
	var err error

	var data MatchingGroupCreatedResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by SendUserNotification.
const SendUserNotification_Operation = `
mutation SendUserNotification ($kind: UserNotificationKind!, $recipentId: String!, $param: Map!) {
	sendUserNotification(kind: $kind, recipentId: $recipentId, param: $param)
}
`

func SendUserNotification(
	ctx context.Context,
	client graphql.Client,
	kind UserNotificationKind,
	recipentId string,
	param map[string]interface{},
) (*SendUserNotificationResponse, error) {
	req := &graphql.Request{
		OpName: "SendUserNotification",
		Query:  SendUserNotification_Operation,
		Variables: &__SendUserNotificationInput{
			Kind:       kind,
			RecipentId: recipentId,
			Param:      param,
		},
	}
	var err error

	var data SendUserNotificationResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
