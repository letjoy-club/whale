enum MotionOfferState {
  "未处理"
  Pending
  "被接受"
  Accepted
  "被拒绝"
  Rejected
  "意向已取消"
  Canceled
  "处理超时"
  Timeout
  "结束"
  Finished
}

type Motion {
  id: String!

  userId: String!
  cityId: String!
  remark: String!

  "是否可发起或者被发起配对"
  active: Boolean!

  inOfferNum: Int!
  outOfferNum: Int!
  pendingInNum: Int!
  pendingOutNum: Int!
  activeNum: Int!

  discoverable: Boolean!
  relatedMatchingId: String!

  properties: [MotionProperty!]!
  dayRange: [String!]!
  preferredPeriods: [DatePeriod!]!
  gender: Gender!

  # query
  liked: Boolean!
  viewCount: Int!
  likeCount: Int!
  thumbsUpCount: Int!
  thumbsUp: Boolean!

  topic: Topic!
  topicOptionConfig: TopicOptionConfig
  user: User!
  city: Area!
  areas: [Area!]!
}

type MotionOfferRecord {
  id: Int! @adminOnly

  toMotionId: String!
  motionId: String!
  state: MotionOfferState!

  "管理员限定"
  createdAt: Time! @adminOnly

  "管理员限定"
  reactAt: Time

  remark: String!
  chatChance: Int!

  # query
  reviewed("无需填写" userId: String): Boolean!
  toMotion: DiscoverMotion!
  motion: DiscoverMotion!
}

type MotionProperty {
  id: String!
  values: [String!]!
}

type DiscoverMotion {
  id: String!
  userId: String!
  topicId: String!
  properties: [MotionProperty!]!
  cityId: String!
  areaIds: [String!]!
  gender: Gender!
  dayRange: [String!]!
  preferredPeriods: [DatePeriod!]!
  remark: String!
  likeCount: Int!
  viewCount: Int!
  thumbsUpCount: Int!

  # query
  "是否标记为喜欢"
  liked("管理员填写 userId" userId: String): Boolean!
  "是否向其提交过意向"
  submitted("管理员填写 userId" userId: String): Boolean!
  thumbsUp("管理员填写 userId" userId: String): Boolean!

  topic: Topic!
  topicOptionConfig: TopicOptionConfig
  user: User!
  city: Area!
  areas: [Area!]!
}

type DiscoverMotionResult {
  motions: [DiscoverMotion!]!
  nextToken: String!
}

input DiscoverTopicCategoryMotionFilter {
  "城市 ID，可以不填，不填则为全国"
  cityId: String

  "发起人性别，可以不填，不填则为不限"
  gender: Gender

  "话题 id，不填则为不限"
  topicIds: [String!]
}

type AvailableMotionOffer {
  "可发起的意向"
  motion: Motion
  "下次获得一次配额的时间"
  nextQuotaTime: Time
}

type CreateMotionOfferResult {
  chatGroupId: String!
}

extend type Query {
  "【广场】发现 V2"
  discoverCategoryMotions(
    userId: String
    filter: DiscoverTopicCategoryMotionFilter
    topicCategoryId: String!
    nextToken: String
  ): DiscoverMotionResult!

  "【广场】用 id 获取 discover motion （简化版 motion）"
  getDiscoverMotion(motionId: String!): DiscoverMotion!

  "【广场】我的收到活动意向"
  outMotionOffers(motionId: String!): [MotionOfferRecord!]!

  "【广场】我发出的活动意向"
  inMotionOffers(motionId: String!): [MotionOfferRecord!]!

  "【广场】查询活动信息"
  getMotionOffer(motionId: String!, toMotionId: String!): MotionOfferRecord!
}

input NotifyNewMotionOfferMessageParam {
  begin: Time!
  end: Time!
}

extend type Mutation {
  "【广场】获取可以发起响应的意向 id"
  getAvailableMotionOffer(
    "用户 ID，不填"
    userId: String
    targetMotionId: String!
  ): AvailableMotionOffer!

  "【广场】发起活动意向"
  createMotionOffer(myMotionId: String!, targetMotionId: String!): CreateMotionOfferResult!

  "【广场】取消活动意向"
  cancelMotionOffer(myMotionId: String!, targetMotionId: String!): String

  "【广场】接受活动意向"
  acceptMotionOffer(myMotionId: String!, targetMotionId: String!): String

  "【广场】拒绝活动意向"
  rejectMotionOffer(myMotionId: String!, targetMotionId: String!): String

  "【广场】发送聊天消息"
  sendChatInOffer(
    myMotionId: String!
    targetMotionId: String!
    sentence: String!
  ): String

  "【广场】结束活动"
  finishMotionOffer(
    "发出邀约的 motion id"
    fromMotionId: String!
    "被邀约的 motion id"
    toMotionId: String!
  ): String

  "【广场】配对提醒，管理员"
  notifyNewMotionOffer(param: NotifyNewMotionOfferMessageParam): String

  "【广场】发送确认消息，测试接口，管理员"
  sendMotionOfferAcceptMessage(id: Int!): String
}
