type UserLikeMotion {
  toMotionId: String!
  toUserId: String!

  userId: String!
  createdAt: Time!

  # query
  motion: DiscoverMotion!
}

type UserThumbsUpMotion {
  userId: String!
  toMotionId: String!
  createdAt: Time!
}

extend type Query {
  "【广场】我喜欢的动议"
  likedMotions(userId: String, paginator: GraphQLPaginator): [UserLikeMotion!]!
  "【广场】我喜欢的动议数量"
  likedMotionsCount(userId: String): Summary!
}

extend type Mutation {
  "【广场】喜欢匹配"
  likeMotion(userId: String, motionId: String!): Int!
  "【广场】取消喜欢匹配"
  unlikeMotion(userId: String, motionId: String!): Int!

  "【广场】点赞动议"
  thumbsUpMotion(userId: String, motionId: String!): String
  "【广场】取消点赞动议"
  cancelThumbsUpMotion(userId: String, motionId: String!): String

  "【广场】点赞的动议，管理端"
  thumbsUpMotions(userId: String, paginator: GraphQLPaginator): [UserThumbsUpMotion!]!
  "【广场】点赞的动议数量，管理端"
  thumbsUpMotionsCount(userId: String): Summary!
}
